node_feature_table_columns = {
    'id': 'INT',
    'label': 'INT',
    'feature_map_string': 'TEXT', 
    'feature_map_double': 'TEXT',  
}

edge_index_table_columns = {
    'src_id': 'INT',
    'dst_id': 'INT',
    'weight': 'FLOAT',
    'type': 'VARCHAR(255)',
}

# 定义 class 表的列和数据类型
class_table_columns = {
    'projectName': 'VARCHAR(255)',
    'moduleName': 'VARCHAR(255)',
    'packageName': 'VARCHAR(255)',
    'fullClassName': 'VARCHAR(255)',
    'className': 'VARCHAR(255)',
    'index': 'INT',
    'modifier': 'TEXT', 
    'extend': 'TEXT',   
    'implement': 'TEXT', 
    'packageDeclaration': 'TEXT',
    'classSignature': 'TEXT',
    'hasConstructor': 'TINYINT(1)',
    'isPublic': 'TINYINT(1)',
    'isInterface': 'TINYINT(1)',
    'isAbstract': 'TINYINT(1)',
    'isTest': 'TINYINT(1)',
    'imports': 'TEXT', 
    'importTypes': 'TEXT',
    'fields': 'TEXT', 
    'superClasses': 'TEXT', 
    'implementedTypes': 'TEXT', 
    'methodSigs': 'TEXT', 
    'methodsBrief': 'TEXT', 
    'constructorSigs': 'TEXT', 
    'constructorBrief': 'TEXT', 
    'getterSetterSigs': 'TEXT', 
    'getterSetterBrief': 'TEXT', 
    'constructorDeps': 'TEXT', 
    'mockDeps': 'TEXT', 
    'fieldDeps': 'TEXT', 
    'compilationUnitCode': 'LONGTEXT',
    'classDeclarationCode': 'LONGTEXT',
    'subClasses': 'TEXT', 
    'line_count': 'INT',
}

# 定义 method 表的列和数据类型
method_table_columns = {
    'projectName': 'VARCHAR(255)',
    'moduleName': 'VARCHAR(255)',
    'packageName': 'VARCHAR(255)',
    'fullClassName': 'VARCHAR(255)',
    'className': 'VARCHAR(255)',
    'methodName': 'VARCHAR(255)',
    'returnType': 'VARCHAR(255)',
    'brief': 'TEXT',
    'methodSignature': 'TEXT',
    'sourceCode': 'LONGTEXT',
    'useField': 'TINYINT(1)',
    'isConstructor': 'TINYINT(1)',
    'isGetSet': 'TINYINT(1)',
    'isPublic': 'TINYINT(1)',
    'isBoolean': 'TINYINT(1)',
    'isAbstract': 'TINYINT(1)',
    'isTest': 'TINYINT(1)',
    'parameters': 'TEXT', 
    'dependentMethods': 'TEXT', 
    'full_method_info': 'LONGTEXT',
    'method_comment': 'TEXT',
    'method_annotation': 'TEXT',
    'line_count': 'INT',
    'branch_count': 'INT',
}

# 定义 class 表的列和数据类型
class_processed_table_columns = {
    'index': 'INT',
    'projectName': 'VARCHAR(255)',
    'moduleName': 'VARCHAR(255)',
    'packageName': 'VARCHAR(255)',
    'fullClassName': 'VARCHAR(255)',
    'className': 'VARCHAR(255)',
    'modifier': 'TEXT', 
    'extend': 'TEXT',   
    'implement': 'TEXT', 
    'packageDeclaration': 'TEXT',
    'classSignature': 'TEXT',
    'hasConstructor': 'TINYINT(1)',
    'isPublic': 'TINYINT(1)',
    'isInterface': 'TINYINT(1)',
    'isAbstract': 'TINYINT(1)',
    'isTest': 'TINYINT(1)',
    'imports': 'TEXT', 
    'importTypes': 'TEXT',
    'fields': 'TEXT', 
    'superClasses': 'TEXT', 
    'implementedTypes': 'TEXT', 
    'methodSigs': 'TEXT', 
    'methodsBrief': 'TEXT', 
    'constructorSigs': 'TEXT', 
    'constructorBrief': 'TEXT', 
    'getterSetterSigs': 'TEXT', 
    'getterSetterBrief': 'TEXT', 
    'constructorDeps': 'TEXT', 
    'mockDeps': 'TEXT', 
    'fieldDeps': 'TEXT', 
    'compilationUnitCode': 'LONGTEXT',
    'classDeclarationCode': 'LONGTEXT',
    'subClasses': 'TEXT', 
    'line_count': 'INT',
    'import_count': 'INT',
    'field_count': 'INT',
    'super_class_count': 'INT',
    'implement_count': 'INT',
    'method_count': 'INT',
    'constructor_count': 'INT',
    'constructor_dep_count': 'INT',
    'sub_class_count': 'INT',
}

# 定义 method 表的列和数据类型
method_processed_table_columns = {
    'index': 'INT',
    'projectName': 'VARCHAR(255)',
    'moduleName': 'VARCHAR(255)',
    'packageName': 'VARCHAR(255)',
    'fullClassName': 'VARCHAR(255)',
    'className': 'VARCHAR(255)',
    'methodName': 'VARCHAR(255)',    
    'returnType': 'VARCHAR(255)',
    'brief': 'TEXT',
    'methodSignature': 'TEXT',
    'sourceCode': 'LONGTEXT',
    'useField': 'TINYINT(1)',
    'isConstructor': 'TINYINT(1)',
    'isGetSet': 'TINYINT(1)',
    'isPublic': 'TINYINT(1)',
    'isBoolean': 'TINYINT(1)',
    'isAbstract': 'TINYINT(1)',
    'isTest': 'TINYINT(1)',
    'parameters': 'TEXT', 
    'dependentMethods': 'TEXT', 
    'full_method_info': 'LONGTEXT',
    'method_comment': 'TEXT',
    'method_annotation': 'TEXT',
    'line_count': 'INT',
    'branch_count': 'INT',
    'parameter_count': 'INT',
    'method_dep_count': 'INT',
}

expected_types = {
    'projectName': 'string',
    'moduleName': 'string',
    'packageName': 'string',
    'fullClassName': 'string',
    'className': 'string',
    'methodName': 'string',
    'returnType': 'string',
    'brief': 'string',
    'methodSignature': 'string',
    'sourceCode': 'string',
    'useField': 'bool',
    'isConstructor': 'bool',
    'isGetSet': 'bool',
    'isPublic': 'bool',
    'isBoolean': 'bool',
    'isAbstract': 'bool',
    'isTest': 'bool',
    'parameters': 'string',
    'dependentMethods': 'string',
    'full_method_info': 'string',
    'method_comment': 'string',
    'method_annotation': 'string',
    'index': 'int64',
    'lineCount': 'int64',
    'branchCount': 'int64',
    'modifier': 'string',
    'extend': 'string',
    'implement': 'string',
    'packageName': 'string',
    'packageDeclaration': 'string',
    'classSignature': 'string',
    'hasConstructor': 'bool',
    'isInterface': 'bool',
    'imports': 'string',
    'importTypes': 'string',
    'fields': 'string',
    'superClasses': 'string',
    'implementedTypes': 'string', 
    'methodSigs': 'string', 
    'methodsBrief': 'string', 
    'constructorSigs': 'string', 
    'constructorBrief': 'string', 
    'getterSetterSigs': 'string', 
    'getterSetterBrief': 'string', 
    'constructorDeps': 'string', 
    'mockDeps': 'string', 
    'fieldDeps': 'string', 
    'compilationUnitCode': 'string',
    'classDeclarationCode': 'string',
    'subClasses': 'string', 
}

node_feature_string_list = [
    'className',
    'packageName',
    'isPublic',
    'isInterface',
    'isAbstract'
]

node_feature_double_list = [
    'lineCount',
    'import_count',
    'field_count',
    'super_class_count',
    'implement_count',
    'method_count',
    'constructor_count',
    'constructor_dep_count',
    'sub_class_count'
]
